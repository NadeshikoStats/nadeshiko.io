<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/x-icon" href="/img/logo.png">
    <link rel="stylesheet" href="/css/stylesheet.css?v=<%= version || 0 %>">
    <script src="/external/master.js?v=<%= version || 0 %>"></script>

    <script>
      let tasksBeforeLoadingHeader = ["fetchLanguageFile", "DOMContentLoaded"];
      let serverComputationError = {};

      function beginGeneration(task) {
        console.log(task);
        if(tasksBeforeLoadingHeader.includes(task)) {
          tasksBeforeLoadingHeader.splice(tasksBeforeLoadingHeader.indexOf(task), 1);
        }

        console.log(`Task ${task} completed; remaining tasks: ${tasksBeforeLoadingHeader}`);

        if(tasksBeforeLoadingHeader.length == 0) {
          updateTranslations();

          texts = [
            getTranslation("games.arcade"),
            getTranslation("games.arena"),
            getTranslation("games.bedwars"),
            getTranslation("games.blitz"),
            getTranslation("games.buildbattle"),
            getTranslation("games.copsandcrims"),
            getTranslation("games.duels"),
            getTranslation("games.megawalls"),
            getTranslation("games.murdermystery"),
            getTranslation("games.paintball"),
            getTranslation("games.pit"),
            getTranslation("games.quakecraft"),
            getTranslation("games.skywars"),
            getTranslation("games.smashheroes"),
            getTranslation("games.speeduhc"),
            getTranslation("games.tntgames"),
            getTranslation("games.walls"),
            getTranslation("games.tkr"),
            getTranslation("games.uhc"),
            getTranslation("games.vampirez"),
            getTranslation("games.warlords"),
            getTranslation("games.woolgames")
          ];

          for (let i = texts.length - 1; i > 0; i--) { // Shuffles array
            let j = Math.floor(Math.random() * (i + 1));
            [texts[i], texts[j]] = [texts[j], texts[i]];
          }

          texts.unshift("Hypixel");

          <% if(typeof computationError !== 'undefined') { %>
            serverComputationError["message"] = "<%= computationError["message"] %>";
            serverComputationError["player"] = "<%= computationError["player"] %>";
            serverComputationError["error"] = "<%= computationError["error"] %>";
            serverComputationError["category"] = "<%= computationError["category"] %>";
            serverComputationError["page"] = "<%= computationError["page"] %>";
          <% } else { %>
            serverComputationError = {};
          <% } %>

          if (serverComputationError["message"] != "") { // If there's an error, display it
            if (serverComputationError["page"] == "player") {
              document.getElementById("home-error-message-description").textContent = insertPlaceholders(getTranslation("home.errors." + serverComputationError["category"]), {"player": serverComputationError["player"], "error": serverComputationError["error"]});
            } else if (serverComputationError["page"] == "guild") {
              document.getElementById("home-error-message-description").textContent = insertPlaceholders(getTranslation("home.errors.guild." + serverComputationError["category"]), {"guild": serverComputationError["guild"], "error": serverComputationError["error"]});
            } else if (serverComputationError["page"] == "achievements") {
              document.getElementById("home-error-message-description").textContent = insertPlaceholders(getTranslation("home.errors.achievements." + serverComputationError["category"]), {"player": serverComputationError["player"], "error": serverComputationError["error"]});
            } else if (serverComputationError["page"] == "quests") {
              document.getElementById("home-error-message-description").textContent = insertPlaceholders(getTranslation("home.errors.quests." + serverComputationError["category"]), {"player": serverComputationError["player"], "error": serverComputationError["error"]});
            } else {
              document.getElementById("home-error-message-description").textContent = serverComputationError["message"];
            }
          }
        }
      }
    </script>
    <script src="/external/language.js?v=<%= version || 0 %>"></script>
    
    <script src="/external/gsap.min.js?v=<%= version || 0 %>"></script>
    <script src="/external/petals.js?v=<%= version || 0 %>"></script>
    <script src="/external/purify.min.js?v=<%= version || 0 %>"></script>

    <meta name="theme-color" content="#f6adc6">
    <meta property="og:site_name" content="nadeshiko.io">
    <meta name='twitter:card' content='summary_large_image' />
    <meta property='og:image' content='https://nadeshiko.io/img/banner.png' />
    <meta name="twitter:image" content="https://nadeshiko.io/img/banner.png">
    <title>The simple, beautiful Hypixel stats website. | nadeshiko.io</title>
    <meta name="description" content="ðŸŒ¸ View Hypixel stats and generate real-time stat cards â€“ perfect for forum signatures or to show off to friends!">
</head>

<body>
    <div class="background" id="background1" style="background-image: url('/img/games/home.png')"></div>
    <div class="background-filter">
    <header>
      <%- include('partials/header') %>
    </header>
    <div class="everythingcenter">
        <div class="home-page-container">
            <span class="flex-two-item-vertical" style="margin: 30px;">
                <span class="subtitle-home" data-t="home.pre_title">Check out stats for</span>
                <span class="title-home typing" id="typing">Hypixel</span>
                <span class="subtitle-home" data-t="home.post_title" style="margin:0"></span>
            </span>
            <section class="player-card-home">
                <div class="flex-two-item">
                  <div class="searchbar-container searchbar-home selected" id="index-searchbar-container">
                    <img src="/img/svg/search.svg" class="search-icon bigicon" id="search-icon2">
                    <input type="search" class="searchbar" id="searchbar2" data-t="home.search" placeholder=" Enter a Minecraft username or UUID..." style="font-size: 16px; flex: 1; padding: 7px 0px;" spellcheck="false" autocomplete="off" autocapitalize="none" autocorrect="off">
                    <div class="searchbar-selector">   
                      <div class="flex-two-item-basic" style="justify-content: end">
                        <p class="header-button selector-button selected scope-player" onmousedown="changeScope('player', 'header')"><img src="/img/logo/hypixel_logo.webp" class="header-icon selector-icon icon" alt=""><span data-t="games.modes.all.stats">Stats</span></p>
                        <p class="header-button selector-button scope-guild" onmousedown="changeScope('guild', 'header')"><img src="/img/icon/minecraft/head_guild.webp" class="header-icon selector-icon icon" alt=""><span data-t="games.modes.network.guild">Guild</span></p>
                      </div>
                      <div class="flex-two-item-basic" style="justify-content: end">
                        <p class="header-button selector-button scope-achievements" onmousedown="changeScope('achievements', 'header')"><img src="/img/icon/minecraft/diamond.webp" class="header-icon selector-icon icon" alt=""><span data-t="achievements.achievements">Achievements</span></p>
                        <p class="header-button selector-button scope-quests" onmousedown="changeScope('quests', 'header')"><img src="/img/icon/minecraft/writable_book.webp" class="header-icon selector-icon icon" alt=""><span data-t="quests.quests">Quests</span></p>
                      </div>
                    </div>
                  </div>
                    <span class="general-button noresize-button" onclick="showMe()" data-t="home.show_me">Show me</span>
                </div>
            </section>
        </div>
        <div id="recent-searches">
          <span id="recent-search-label" data-t="home.recent_searches">Recent Searches</span>
        </div>
        <% if(typeof computationError !== 'undefined' && computationError["message"] != "") { %>
          <div class="home-error-container">
            <p class="home-error-message" data-t="home.errors.error">ERROR</p>
            <script>
            console.warn("<%= computationError["message"] %>");
            console.warn(`<%= JSON.stringify(computationError) %>`);
            </script>
          <p class="home-error" id="home-error-message-description">
          </p>
        </div>
        <% } %>
        <noscript>
          <div class="home-error-container">
            <p class="home-error-message">ERROR</p>
          <p class="home-error">
            Please enable JavaScript to use this site.
          </p>
        </div>
      </noscript>
    </div>
    <div id="petals"></div>
    <div id="petals2"></div>
<footer>
  <%- include('partials/footer') %>
</footer>
</div>



<script>
let indexSearchbarSelected = true;

document.getElementById("searchbar2").addEventListener("keypress", function(event) { // Check if the user's typing in the search box
  checkSearchBox(event, this.value);
});

window.onmousedown = function (event) {
    if (!event.target.closest(".searchbar-container") && indexSearchbarSelected) {
      document.getElementById("index-searchbar-container").classList.remove("selected");
      indexSearchbarSelected = false;
    }
  };

document.getElementById('search-icon2').addEventListener('click', function() {
  document.getElementById('searchbar2').focus();
});

document.getElementById("index-searchbar-container").addEventListener("mousedown", function () {
    document.getElementById("index-searchbar-container").classList.add("selected");
  });

  
  document.getElementById("index-searchbar-container").addEventListener("click", function () {
    if (document.activeElement != document.getElementById("searchbar2")) {
      document.getElementById("searchbar2").focus();
      document.getElementById("searchbar2").select();
    }

    indexSearchbarSelected = true;
    document.getElementById("index-searchbar-container").classList.add("selected");
  });



function showMe() {
    var userInput = document.getElementById("searchbar2").value.replaceAll(/[^A-Za-z0-9_]/g, ""); // Removes all characters that can't be in a username or UUID
    if(userInput != "") window.location.href = `/player/${userInput}`; // Redirect to the desired URL
    else console.log(userInput)
}

function redirectToHttps() { // If the user's on the HTTP version of nadeshiko, switch to HTTPS
  windowLocation = window.location;

  if(windowLocation.protocol == "http:" && windowLocation.host != "localhost:8080") { // If the user's using HTTP (and it's not localhost)
      window.location = "https://nadeshiko.io" + windowLocation.pathname + windowLocation.search;
  }
}

redirectToHttps();

let index = 0;
let charIndex = 0;
let direction = 1;

var texts = ["Arcade", "Arena Brawl", "Bed Wars", "Blitz", "Build Battle", "Cops and Crims", "Duels", "Mega Walls", "Murder Mystery", "Paintball", "Pit", "Quakecraft", "SkyWars", "Smash Heroes", "Speed UHC", "TNT Games", "The Walls", "Turbo Kart Racers", "UHC", "VampireZ", "Warlords", "Wool Wars"];

for (let i = texts.length - 1; i > 0; i--) { // Shuffles array
        let j = Math.floor(Math.random() * (i + 1));
        [texts[i], texts[j]] = [texts[j], texts[i]];
}

texts.unshift("Hypixel");

function type() { // Writes typing

  let currentText = texts[index];
  
  if (direction) { // Forward
    charIndex++;
    if (charIndex > currentText.length) {
      direction = false;
      setTimeout(type, 1500);
      return;
    }
  } else { // Deleting backward
    charIndex--;
    if (charIndex === -1) {
      direction = true;
      index = (index + 1) % texts.length; // Loop through texts
      setTimeout(type, 500);
      return;
    }
  }

  document.getElementById('typing').textContent = currentText.substring(0, charIndex); // Update text in HTML

  let speed = direction ? 150 : 70;
  setTimeout(type, speed);
}

type(); // Start typing effect
if(document.documentElement.clientWidth >= 800) {
  document.getElementById('searchbar2').focus();
  document.getElementById('searchbar2').select();
}

  recentSearches = JSON.parse(localStorage.getItem("recent-searches"));
if(recentSearches != null) {
  document.getElementById("recent-search-label").style.display = "initial";
  for(let a = 0; a < recentSearches.length; a++) {
    recentSearchItem = `<a href="/player/${recentSearches[a][0]}" class="m${recentSearches[a][1]}">${recentSearches[a][0]}</a>`
    document.getElementById("recent-searches").insertAdjacentHTML("beforeend", recentSearchItem);
  }
}
</script>

</body>
</html>